
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 31/08/2022 - 14:49
// This is a partial class file. The other one is ConfiguracionEntity.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using monaguaRules.Objects;



using Cooperator.Framework.Core;
using Cooperator.Framework.Core.LazyLoad;
using System;

namespace monaguaRules.Entities
{

    /// <summary>
    /// 
    /// </summary>
    public partial class Configuracion : Objects.ConfiguracionObject, IMappeableConfiguracion, IEquatable<Configuracion>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public Configuracion()
            :base()
        {
            
        }

        /// <summary>
        /// 
        /// </summary>
        public Configuracion(
			System.Int32 IdConfig)
            : base()
        {

			_IdConfig = IdConfig;

            
            Initialized();
        }

        

        /// <summary>
        /// 
        /// </summary>
        public Configuracion(
			System.Int32 IdConfig,
			System.String Clave,
			System.String Valor)
            : base()
        {

			_IdConfig = IdConfig;
			_Clave = Clave;
			_Valor = Valor;

            
            Initialized();
        }
        
        #endregion

        #region "Fields"

        
        #endregion

        #region "Properties"
        
        #endregion

        /// <summary>
        /// Returns de original value of entity since was created or restored.
        /// </summary>
        public new Configuracion OriginalValue()
        {
            return (Configuracion)base.OriginalValue();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            Configuracion newObject;            
            

            newObject = (Configuracion)this.MemberwiseClone();
            // Entities
            
            // Colections
            
            // OriginalValue
            Configuracion newOriginalValue;
            if (base._OriginalValue != null)
            {
                newOriginalValue = (Configuracion)this.OriginalValue().MemberwiseClone();
                // Entities
                
                // Colections
                            
                newObject._OriginalValue = newOriginalValue;

            }
            return newObject;            
        }



        /// <summary>
        /// 
        /// </summary>
        void IMappeableConfiguracion.CompleteEntity()
        {
        
        }
        

        /// <summary>
        /// 
        /// </summary>
        void IMappeableConfiguracion.SetFKValuesForChilds(Configuracion entity)
        {
                
        }

        /// <summary>
        /// 
        /// </summary>
        public bool Equals(Configuracion other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        } 

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableConfiguracion
    {
        /// <summary>
        /// 
        /// </summary>
        void CompleteEntity();
        
        /// <summary>
        /// 
        /// </summary>
        void SetFKValuesForChilds(Configuracion entity);
    }

        /// <summary>
        /// 
        /// </summary>
    public partial class ConfiguracionList : ObjectList<Configuracion>
    {
    }
}
namespace monaguaRules.Views
{
        /// <summary>
        /// 
        /// </summary>
    public partial class ConfiguracionListView
        : ObjectListView<Entities.Configuracion>
    {
        /// <summary>
        /// 
        /// </summary>
        public ConfiguracionListView(Entities.ConfiguracionList list): base(list)
        {
        }
    }
}


