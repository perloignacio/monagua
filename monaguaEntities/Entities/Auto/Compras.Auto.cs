
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 31/08/2022 - 14:49
// This is a partial class file. The other one is ComprasEntity.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using monaguaRules.Objects;



using Cooperator.Framework.Core;
using Cooperator.Framework.Core.LazyLoad;
using System;

namespace monaguaRules.Entities
{

    /// <summary>
    /// 
    /// </summary>
    public partial class Compras : Objects.ComprasObject, IMappeableCompras, IEquatable<Compras>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public Compras()
            :base()
        {
            if (_EstadosCompraEntity == null) _EstadosCompraEntity = new Entities.EstadosCompra();

        }

        /// <summary>
        /// 
        /// </summary>
        public Compras(
			System.Int32 IdCompra)
            : base()
        {

			_IdCompra = IdCompra;

            if (_EstadosCompraEntity == null) _EstadosCompraEntity = new Entities.EstadosCompra();

            Initialized();
        }

        

        /// <summary>
        /// 
        /// </summary>
        public Compras(
			System.Int32 IdCompra,
			System.Nullable<System.Int32> IdCliente,
			System.DateTime Fecha,
			System.Boolean Reserva,
			System.Nullable<System.Int32> IdDescuento,
			System.String MercadoPago,
			System.Int32 IdEstadoCompra,
			System.Boolean Activa,
			System.String Comentarios,
			System.Nullable<System.Decimal> MontoDescuento)
            : base()
        {

			_IdCompra = IdCompra;
			_IdCliente = IdCliente;
			_Fecha = Fecha;
			_Reserva = Reserva;
			_IdDescuento = IdDescuento;
			_MercadoPago = MercadoPago;
			_IdEstadoCompra = IdEstadoCompra;
			_Activa = Activa;
			_Comentarios = Comentarios;
			_MontoDescuento = MontoDescuento;

            if (_EstadosCompraEntity == null) _EstadosCompraEntity = new Entities.EstadosCompra();

            Initialized();
        }
        
        #endregion

        #region "Fields"

        /// <summary>
/// 
/// </summary>
protected Entities.Clientes _ClientesEntity;
/// <summary>
/// 
/// </summary>
protected Entities.Descuentos _DescuentosEntity;
/// <summary>
/// 
/// </summary>
protected Entities.EstadosCompra _EstadosCompraEntity;

        #endregion

        #region "Properties"
        
bool _ClientesEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Entities.Clientes ClientesEntity
        {
            get
            {
                if (_ClientesEntity== null  && this.IdCliente.HasValue && ! _ClientesEntityFetched ) {
_ClientesEntityFetched = true;
Entities.Clientes _ClientesEntityTemp = new Entities.Clientes(this.IdCliente.Value); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Entities.Clientes));
 _ClientesEntity = lazyProvider.GetEntity(typeof(Entities.Clientes), _ClientesEntityTemp) as Entities.Clientes;
}

                return _ClientesEntity;
            }
            set
            {
                base.PropertyModified();
                _ClientesEntity = value;
                if (value != null) {
   _IdCliente = value.IdCliente;

} else {
   _IdCliente = null;

}

            }
        }
        
bool _DescuentosEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Entities.Descuentos DescuentosEntity
        {
            get
            {
                if (_DescuentosEntity== null  && this.IdDescuento.HasValue && ! _DescuentosEntityFetched ) {
_DescuentosEntityFetched = true;
Entities.Descuentos _DescuentosEntityTemp = new Entities.Descuentos(this.IdDescuento.Value); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Entities.Descuentos));
 _DescuentosEntity = lazyProvider.GetEntity(typeof(Entities.Descuentos), _DescuentosEntityTemp) as Entities.Descuentos;
}

                return _DescuentosEntity;
            }
            set
            {
                base.PropertyModified();
                _DescuentosEntity = value;
                if (value != null) {
   _IdDescuento = value.IdDescuento;

} else {
   _IdDescuento = null;

}

            }
        }
        
bool _EstadosCompraEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Entities.EstadosCompra EstadosCompraEntity
        {
            get
            {
                if (_EstadosCompraEntity== null  && ! _EstadosCompraEntityFetched ) {
_EstadosCompraEntityFetched = true;
Entities.EstadosCompra _EstadosCompraEntityTemp = new Entities.EstadosCompra(this.IdEstadoCompra); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Entities.EstadosCompra));
 _EstadosCompraEntity = lazyProvider.GetEntity(typeof(Entities.EstadosCompra), _EstadosCompraEntityTemp) as Entities.EstadosCompra;
}

                return _EstadosCompraEntity;
            }
            set
            {
                base.PropertyModified();
                _EstadosCompraEntity = value;
                if (value != null) {
   _IdEstadoCompra = value.IdEstadoCompra;

} else {
   _IdEstadoCompra = System.Int32.MinValue;

}

            }
        }
        
        #endregion

        /// <summary>
        /// Returns de original value of entity since was created or restored.
        /// </summary>
        public new Compras OriginalValue()
        {
            return (Compras)base.OriginalValue();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            Compras newObject;            
            

            newObject = (Compras)this.MemberwiseClone();
            // Entities
                         
            if (this._ClientesEntity != null)
            {
                newObject._ClientesEntity = (Entities.Clientes)((ICloneable)this._ClientesEntity).Clone();
            }
                         
            if (this._DescuentosEntity != null)
            {
                newObject._DescuentosEntity = (Entities.Descuentos)((ICloneable)this._DescuentosEntity).Clone();
            }
                         
            if (this._EstadosCompraEntity != null)
            {
                newObject._EstadosCompraEntity = (Entities.EstadosCompra)((ICloneable)this._EstadosCompraEntity).Clone();
            }
            
            // Colections
            
            // OriginalValue
            Compras newOriginalValue;
            if (base._OriginalValue != null)
            {
                newOriginalValue = (Compras)this.OriginalValue().MemberwiseClone();
                // Entities
                             
                if (this.OriginalValue()._ClientesEntity != null)
                {
                    newOriginalValue._ClientesEntity = (Entities.Clientes)((ICloneable)this.OriginalValue()._ClientesEntity).Clone();
                }
                             
                if (this.OriginalValue()._DescuentosEntity != null)
                {
                    newOriginalValue._DescuentosEntity = (Entities.Descuentos)((ICloneable)this.OriginalValue()._DescuentosEntity).Clone();
                }
                             
                if (this.OriginalValue()._EstadosCompraEntity != null)
                {
                    newOriginalValue._EstadosCompraEntity = (Entities.EstadosCompra)((ICloneable)this.OriginalValue()._EstadosCompraEntity).Clone();
                }
                
                // Colections
                            
                newObject._OriginalValue = newOriginalValue;

            }
            return newObject;            
        }



        /// <summary>
        /// 
        /// </summary>
        void IMappeableCompras.CompleteEntity(Entities.Clientes ClientesEntity, Entities.Descuentos DescuentosEntity, Entities.EstadosCompra EstadosCompraEntity)
        {
        _ClientesEntity = ClientesEntity;
_DescuentosEntity = DescuentosEntity;
_EstadosCompraEntity = EstadosCompraEntity;
        }
        
        bool IMappeableCompras.IsClientesEntityNull()
        {
            return (_ClientesEntity == null);
        }
        
        bool IMappeableCompras.IsDescuentosEntityNull()
        {
            return (_DescuentosEntity == null);
        }
        
        bool IMappeableCompras.IsEstadosCompraEntityNull()
        {
            return (_EstadosCompraEntity == null);
        }
        

        /// <summary>
        /// 
        /// </summary>
        void IMappeableCompras.SetFKValuesForChilds(Compras entity)
        {
                
        }

        /// <summary>
        /// 
        /// </summary>
        public bool Equals(Compras other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        } 

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableCompras
    {
        /// <summary>
        /// 
        /// </summary>
        void CompleteEntity(Entities.Clientes ClientesEntity, Entities.Descuentos DescuentosEntity, Entities.EstadosCompra EstadosCompraEntity);
        
        /// <summary>
        /// 
        /// </summary>
        bool IsClientesEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        bool IsDescuentosEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        bool IsEstadosCompraEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        void SetFKValuesForChilds(Compras entity);
    }

        /// <summary>
        /// 
        /// </summary>
    public partial class ComprasList : ObjectList<Compras>
    {
    }
}
namespace monaguaRules.Views
{
        /// <summary>
        /// 
        /// </summary>
    public partial class ComprasListView
        : ObjectListView<Entities.Compras>
    {
        /// <summary>
        /// 
        /// </summary>
        public ComprasListView(Entities.ComprasList list): base(list)
        {
        }
    }
}


