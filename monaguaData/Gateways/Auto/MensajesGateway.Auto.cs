
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 18/7/2022 - 04:08 p.Â m.
// This is a partial class file. The other one is MensajesGateway.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using System;
using monaguaRules.Objects;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using Cooperator.Framework.Core;
using System.Data;
using System.Data.Common;
using System.Reflection;
using System.Web;




namespace monaguaRules.Gateways
{

    public partial class MensajesGateway : BaseGateway<MensajesObject, MensajesObjectList>, IGenericGateway
    {

        #region "Singleton"

        static MensajesGateway _instance;

        private MensajesGateway()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        
        
        public static MensajesGateway Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new MensajesGateway();
                else {
                    MensajesGateway inst = HttpContext.Current.Items["monaguaRules.MensajesGatewaySingleton"] as MensajesGateway;
                    if (inst == null) {
                        inst = new MensajesGateway();
                        HttpContext.Current.Items.Add("monaguaRules.MensajesGatewaySingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }

        #endregion

        /// <summary>
        /// Return the mapped table name
        /// </summary>
        protected override string TableName
        {
            get { return "Mensajes"; }
        }

        protected override string RuleName
        {
            get {return typeof(MensajesGateway).FullName;}
        }


        

        /// <summary>
        /// Assign properties values based on DataReader
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, MensajesObject entity)
        {
            
            IMappeableMensajesObject Mensajes = (IMappeableMensajesObject)entity;
            Mensajes.HydrateFields(
            reader.GetInt32(0),
reader.GetDateTime(1),
reader.GetString(2),
reader.GetBoolean(3),
reader.GetBoolean(4),
reader.GetBoolean(5),
reader.GetBoolean(6),
reader.GetInt32(7));
            ((IObject)entity).State = ObjectState.Restored;
        }

        /// <summary>
        /// Get field values to call insertion stored procedure
        /// </summary>
        protected override object[] GetFieldsForInsert(MensajesObject entity)
        {

            IMappeableMensajesObject Mensajes = (IMappeableMensajesObject)entity;
            return Mensajes.GetFieldsForInsert();
        }

        /// <summary>
        /// Get field values to call update stored procedure
        /// </summary>
        protected override object[] GetFieldsForUpdate(MensajesObject entity)
        {

            IMappeableMensajesObject Mensajes = (IMappeableMensajesObject)entity;
            return Mensajes.GetFieldsForUpdate();
        }

        /// <summary>
        /// Get field values to call deletion stored procedure
        /// </summary>
        protected override object[] GetFieldsForDelete(MensajesObject entity)
        {

            IMappeableMensajesObject Mensajes = (IMappeableMensajesObject)entity;
            return Mensajes.GetFieldsForDelete();
        }

        /// <summary>
        /// Raised after insert and update. Update properties from Output parameters
        /// </summary>
        protected override void UpdateObjectFromOutputParams(MensajesObject row, object[] parameters)
        {
            ((IMappeableMensajesObject) row).UpdateObjectFromOutputParams(parameters);
            ((IObject)row).State = ObjectState.Restored;
        }

        /// <summary>
        /// StoredProceduresPrefix, for example: coop_
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "coop_";
        }


        /// <summary>
        /// Get a MensajesObject by execute a SQL Query Text
        /// </summary>
        public MensajesObject GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a MensajesObjectList by execute a SQL Query Text
        /// </summary>
        public MensajesObjectList GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }


        /// <summary>
        /// Get a MensajesObject by calling a Stored Procedure
        /// </summary>
        public MensajesObject GetOne(System.Int32 IdMensaje)
        {
            return base.GetOne(new MensajesObject(IdMensaje));
        }


        // GetBy Objects and Params
            


        

        /// <summary>
        /// Get a MensajesObjectList by calling a Stored Procedure
        /// </summary>
        public MensajesObjectList GetByComprasDetalle(DbTransaction transaction,System.Int32 IdCompraDetalle)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Mensajes_GetByComprasDetalle", IdCompraDetalle);
        }

        /// <summary>
        /// Get a MensajesObjectList by calling a Stored Procedure
        /// </summary>
        public MensajesObjectList GetByComprasDetalle(DbTransaction transaction, IUniqueIdentifiable ComprasDetalle)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Mensajes_GetByComprasDetalle", ComprasDetalle.Identifier());
        }

    

        

        /// <summary>
        /// Get a MensajesObjectList by calling a Stored Procedure
        /// </summary>
        public MensajesObjectList GetByComprasDetalle(System.Int32 IdCompraDetalle)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Mensajes_GetByComprasDetalle", IdCompraDetalle);
        }

        /// <summary>
        /// Get a MensajesObjectList by calling a Stored Procedure
        /// </summary>
        public MensajesObjectList GetByComprasDetalle(IUniqueIdentifiable ComprasDetalle)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Mensajes_GetByComprasDetalle", ComprasDetalle.Identifier());
        }

    

        /// <summary>
        /// Delete Mensajes
        /// </summary>
        public void Delete(System.Int32 IdMensaje)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Mensajes_Delete", IdMensaje);
        }

        /// <summary>
        /// Delete Mensajes
        /// </summary>
        public void Delete(DbTransaction transaction, System.Int32 IdMensaje)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Mensajes_Delete", IdMensaje);
        }

            

        

        /// <summary>
        /// Delete Mensajes by ComprasDetalle
        /// </summary>
        public void DeleteByComprasDetalle(System.Int32 IdCompraDetalle)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Mensajes_DeleteByComprasDetalle", IdCompraDetalle);
        }

        /// <summary>
        /// Delete Mensajes by ComprasDetalle
        /// </summary>
        public void DeleteByComprasDetalle(DbTransaction transaction, System.Int32 IdCompraDetalle)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Mensajes_DeleteByComprasDetalle", IdCompraDetalle);
        }

        /// <summary>
        /// Delete Mensajes by ComprasDetalle
        /// </summary>
        public void DeleteByComprasDetalle(IUniqueIdentifiable ComprasDetalle)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Mensajes_DeleteByComprasDetalle", ComprasDetalle.Identifier());
        }

        /// <summary>
        /// Delete Mensajes by ComprasDetalle
        /// </summary>
        public void DeleteByComprasDetalle(DbTransaction transaction, IUniqueIdentifiable ComprasDetalle)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Mensajes_DeleteByComprasDetalle", ComprasDetalle.Identifier());
        }


    


        //Database Queries 
        



        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion


    }

}








