
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 15/09/2022 - 16:08
// This is a partial class file. The other one is DescuentosMapper.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using System;
using monaguaRules.Entities;
using monaguaRules.Objects;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using Cooperator.Framework.Core;
using System.Data.Common;
using System.Reflection;
using System.Web;
using System.Data;

namespace monaguaRules.Mappers
{

    
    /// <summary>
    /// 
    /// </summary>
    public partial class DescuentosMapper : BaseGateway<Descuentos, DescuentosList>, IGenericGateway
    {


        #region "Singleton"

        static DescuentosMapper _instance;

        private DescuentosMapper()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static DescuentosMapper Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new DescuentosMapper();
                else {
                    DescuentosMapper inst = HttpContext.Current.Items["monaguaRules.DescuentosMapperSingleton"] as DescuentosMapper;
                    if (inst == null) {
                        inst = new DescuentosMapper();
                        HttpContext.Current.Items.Add("monaguaRules.DescuentosMapperSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"IdDescuento"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(Descuentos);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "Descuentos"; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string RuleName
        {
            get {return typeof(DescuentosMapper).FullName;}
        }


        

        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, Descuentos entity)
        {
            
            IMappeableDescuentosObject Descuentos = (IMappeableDescuentosObject)entity;
            Descuentos.HydrateFields(
            reader.GetInt32(0),
reader.GetString(1),
reader.GetString(2),
(reader.IsDBNull(3)) ? new System.Nullable<System.Decimal>() : reader.GetDecimal(3),
(reader.IsDBNull(4)) ? new System.Nullable<System.Decimal>() : reader.GetDecimal(4),
(reader.IsDBNull(5)) ? new System.Nullable<System.Int32>() : reader.GetInt32(5),
(reader.IsDBNull(6)) ? new System.Nullable<System.DateTime>() : reader.GetDateTime(6),
(reader.IsDBNull(7)) ? new System.Nullable<System.DateTime>() : reader.GetDateTime(7),
reader.GetBoolean(8));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForInsert(Descuentos entity)
        {

            IMappeableDescuentosObject Descuentos = (IMappeableDescuentosObject)entity;
            return Descuentos.GetFieldsForInsert();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForUpdate(Descuentos entity)
        {

            IMappeableDescuentosObject Descuentos = (IMappeableDescuentosObject)entity;
            return Descuentos.GetFieldsForUpdate();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForDelete(Descuentos entity)
        {

            IMappeableDescuentosObject Descuentos = (IMappeableDescuentosObject)entity;
            return Descuentos.GetFieldsForDelete();
        }


        /// <summary>
        /// Raised after insert and update
        /// </summary>
        protected override void UpdateObjectFromOutputParams(Descuentos entity, object[] parameters)
        {
            // Update properties from Output parameters
            ((IMappeableDescuentosObject) entity).UpdateObjectFromOutputParams(parameters);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "coop_";
        }


        


        

        /// <summary>
        /// Complete the aggregations for this entity. 
        /// </summary>
        protected override void CompleteEntity(Descuentos entity)
        {
            
            ((IMappeableDescuentos)entity).CompleteEntity();
        }


        # region CRUD Operations
        

        # endregion

        /// <summary>
        /// Delete children for this entity
        /// </summary>
        public void DeleteChildren(DbTransaction transaction, IUniqueIdentifiable entity)
        {
                        
        }


          





        /// <summary>
        /// Get a Descuentos by execute a SQL Query Text
        /// </summary>
        public Descuentos GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a DescuentosList by execute a SQL Query Text
        /// </summary>
        public DescuentosList GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }


        /// <summary>
        /// 
        /// </summary>
        public Descuentos GetOne(System.Int32 IdDescuento)
        {
            return base.GetOne(new Descuentos(IdDescuento));
        }


        // GetOne By Objects and Params
            


        


        

        /// <summary>
        /// 
        /// </summary>
        public void Delete(System.Int32 IdDescuento)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Descuentos_Delete", IdDescuento);
        }

        /// <summary>
        /// 
        /// </summary>
        public void Delete(DbTransaction transaction, System.Int32 IdDescuento)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Descuentos_Delete", IdDescuento);
        }


        // Delete By Objects and Params
            



        


        //Database Queries 
        
            

        /// <summary>
        /// 
        /// </summary>
        public Descuentos GetByCodigo(System.String codigo) {
            
            return base.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "Descuentos_GetByCodigo" , codigo);
            
        }

        
        /// <summary>
        /// 
        /// </summary>
        public Descuentos GetByCodigo(DbTransaction transaction , System.String codigo) {
            
            return base.GetObjectByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Descuentos_GetByCodigo" , codigo);
            
        }


        


        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion


    }


}

namespace monaguaRules.Wrappers
{
    /// <summary>
    /// 
    /// </summary>
    public class DescuentosMapperWrapper
    {

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            return Instance().GetPKPropertiesNames();
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return Instance().GetMappingType();
        }



        /// <summary>
        /// 
        /// </summary>
        public monaguaRules.Mappers.DescuentosMapper Instance()
        {
            return monaguaRules.Mappers.DescuentosMapper.Instance(); 
        }
        
        /// <summary>
        /// Get a DescuentosEntity by calling a Stored Procedure
        /// </summary>
        public Entities.Descuentos GetOne(System.Int32 IdDescuento) {
            return Instance().GetOne( IdDescuento);
        }

        // GetBy Objects and Params
            

        

       

        /// <summary>
        /// Delete children for Descuentos
        /// </summary>
        public void DeleteChildren(DbTransaction transaction, Descuentos entity)
        {
            Instance().DeleteChildren(transaction, entity);
        }

        

            

        
        /// <summary>
        /// Delete Descuentos 
        /// </summary>
        public void Delete(System.Int32 IdDescuento){
            Instance().Delete(IdDescuento);
        }

        /// <summary>
        /// Delete Descuentos 
        /// </summary>
        public void Delete(Entities.Descuentos entity ){
            Instance().Delete(entity);
        }

        /// <summary>
        /// Save Descuentos  
        /// </summary>
        public void Save(Entities.Descuentos entity){
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert Descuentos 
        /// </summary>
        public void Insert(Entities.Descuentos entity){
            Instance().Insert(entity);
        }

        /// <summary>
        /// GetAll Descuentos 
        /// </summary>
        public Entities.DescuentosList GetAll(){  
            return Instance().GetAll();
        }

        /// <summary>
        /// Save Descuentos 
        /// </summary>
        public void Save(System.Int32 IdDescuento, System.String Nombre, System.String Codigo, System.Decimal Porcentaje, System.Decimal Monto, System.Int32 Stock, System.DateTime FechaDesde, System.DateTime FechaHasta, System.Boolean Activo){
            Entities.Descuentos entity = Instance().GetOne(IdDescuento);
            if (entity == null)
                throw new ApplicationException(String.Format("Entity not found. IUniqueIdentifiable Values: {0} = {1}", "IdDescuento", IdDescuento));

            entity.Nombre = Nombre;
            entity.Codigo = Codigo;
            entity.Porcentaje = Porcentaje;
            entity.Monto = Monto;
            entity.Stock = Stock;
            entity.FechaDesde = FechaDesde;
            entity.FechaHasta = FechaHasta;
            entity.Activo = Activo;
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert Descuentos
        /// </summary>
        public void Insert(System.String Nombre, System.String Codigo, System.Decimal Porcentaje, System.Decimal Monto, System.Int32 Stock, System.DateTime FechaDesde, System.DateTime FechaHasta, System.Boolean Activo){
            Entities.Descuentos entity = new Entities.Descuentos();

            entity.Nombre = Nombre;
            entity.Codigo = Codigo;
            entity.Porcentaje = Porcentaje;
            entity.Monto = Monto;
            entity.Stock = Stock;
            entity.FechaDesde = FechaDesde;
            entity.FechaHasta = FechaHasta;
            entity.Activo = Activo;
            Instance().Insert(entity);
        }


        //Database Queries 
        
            
        /// <summary>
        /// 
        /// </summary>
        public Descuentos GetByCodigo(System.String codigo) {
            
                return Instance().GetByCodigo( codigo);
        }


        


    }
}





namespace monaguaRules.Loaders
{

    /// <summary>
    /// 
    /// </summary>
    public partial class DescuentosLoader<T> : BaseLoader< T, Descuentos, ObjectList<T>>, IGenericGateway where T : Descuentos, new()
    {

        #region "Singleton"

        static DescuentosLoader<T> _instance;

        private DescuentosLoader()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static DescuentosLoader<T> Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new DescuentosLoader<T>();
                else {
                    DescuentosLoader<T> inst = HttpContext.Current.Items["monaguaRules.DescuentosLoaderSingleton"] as DescuentosLoader<T>;
                    if (inst == null) {
                        inst = new DescuentosLoader<T>();
                        HttpContext.Current.Items.Add("monaguaRules.DescuentosLoaderSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"IdDescuento"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(Descuentos);
        }


        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "Descuentos"; }
        }

        
        
        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, Descuentos entity)
        {
            
            IMappeableDescuentosObject Descuentos = (IMappeableDescuentosObject)entity;
            Descuentos.HydrateFields(
            reader.GetInt32(0),
reader.GetString(1),
reader.GetString(2),
(reader.IsDBNull(3)) ? new System.Nullable<System.Decimal>() : reader.GetDecimal(3),
(reader.IsDBNull(4)) ? new System.Nullable<System.Decimal>() : reader.GetDecimal(4),
(reader.IsDBNull(5)) ? new System.Nullable<System.Int32>() : reader.GetInt32(5),
(reader.IsDBNull(6)) ? new System.Nullable<System.DateTime>() : reader.GetDateTime(6),
(reader.IsDBNull(7)) ? new System.Nullable<System.DateTime>() : reader.GetDateTime(7),
reader.GetBoolean(8));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "coop_";
        }


        
    

        

        /// <summary>
        /// Complete the aggregations for this entity. 
        /// </summary>
        protected override void CompleteEntity(T entity)
        {
            
            ((IMappeableDescuentos)entity).CompleteEntity();
        }


        



        /// <summary>
        /// Get a Descuentos by execute a SQL Query Text
        /// </summary>
        public T GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a DescuentosList by execute a SQL Query Text
        /// </summary>
        public ObjectList<T> GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }

        /// <summary>
        /// GetOne By Params
        /// </summary>
        public T GetOne(System.Int32 IdDescuento)
        {
            return base.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "Descuentos_GetOne", IdDescuento);
        }


        // GetOne By Objects and Params
            


        


        

        //Database Queries 
        
            
        /// <summary>
        /// 
        /// </summary>
        public T GetByCodigo(System.String codigo) {
            
            return base.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "Descuentos_GetByCodigo" , codigo);
            
        }

        
        /// <summary>
        /// 
        /// </summary>
        public T GetByCodigo(DbTransaction transaction , System.String codigo) {
            
            return base.GetObjectByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Descuentos_GetByCodigo" , codigo);
            
        }

        



        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion

    }
}





