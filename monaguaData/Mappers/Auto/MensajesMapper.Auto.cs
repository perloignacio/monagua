
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 10/6/2022 - 05:08 p.Â m.
// This is a partial class file. The other one is MensajesMapper.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using System;
using monaguaRules.Entities;
using monaguaRules.Objects;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using Cooperator.Framework.Core;
using System.Data.Common;
using System.Reflection;
using System.Web;
using System.Data;

namespace monaguaRules.Mappers
{

    
    /// <summary>
    /// 
    /// </summary>
    public partial class MensajesMapper : BaseGateway<Mensajes, MensajesList>, IGenericGateway
    {


        #region "Singleton"

        static MensajesMapper _instance;

        private MensajesMapper()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static MensajesMapper Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new MensajesMapper();
                else {
                    MensajesMapper inst = HttpContext.Current.Items["monaguaRules.MensajesMapperSingleton"] as MensajesMapper;
                    if (inst == null) {
                        inst = new MensajesMapper();
                        HttpContext.Current.Items.Add("monaguaRules.MensajesMapperSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"IdMensaje"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(Mensajes);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "Mensajes"; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string RuleName
        {
            get {return typeof(MensajesMapper).FullName;}
        }


        

        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, Mensajes entity)
        {
            
            IMappeableMensajesObject Mensajes = (IMappeableMensajesObject)entity;
            Mensajes.HydrateFields(
            reader.GetInt32(0),
reader.GetDateTime(1),
reader.GetString(2),
reader.GetBoolean(3),
reader.GetBoolean(4),
reader.GetBoolean(5),
reader.GetBoolean(6),
reader.GetInt32(7));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForInsert(Mensajes entity)
        {

            IMappeableMensajesObject Mensajes = (IMappeableMensajesObject)entity;
            return Mensajes.GetFieldsForInsert();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForUpdate(Mensajes entity)
        {

            IMappeableMensajesObject Mensajes = (IMappeableMensajesObject)entity;
            return Mensajes.GetFieldsForUpdate();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForDelete(Mensajes entity)
        {

            IMappeableMensajesObject Mensajes = (IMappeableMensajesObject)entity;
            return Mensajes.GetFieldsForDelete();
        }


        /// <summary>
        /// Raised after insert and update
        /// </summary>
        protected override void UpdateObjectFromOutputParams(Mensajes entity, object[] parameters)
        {
            // Update properties from Output parameters
            ((IMappeableMensajesObject) entity).UpdateObjectFromOutputParams(parameters);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "coop_";
        }


        


        

        /// <summary>
        /// Complete the aggregations for this entity. 
        /// </summary>
        protected override void CompleteEntity(Mensajes entity)
        {
            Entities.ComprasDetalle ComprasDetalleEntity = null; // Lazy load
            ((IMappeableMensajes)entity).CompleteEntity(ComprasDetalleEntity);
        }


        # region CRUD Operations
        

        # endregion

        /// <summary>
        /// Delete children for this entity
        /// </summary>
        public void DeleteChildren(DbTransaction transaction, IUniqueIdentifiable entity)
        {
                        
        }


          





        /// <summary>
        /// Get a Mensajes by execute a SQL Query Text
        /// </summary>
        public Mensajes GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a MensajesList by execute a SQL Query Text
        /// </summary>
        public MensajesList GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }


        /// <summary>
        /// 
        /// </summary>
        public Mensajes GetOne(System.Int32 IdMensaje)
        {
            return base.GetOne(new Mensajes(IdMensaje));
        }


        // GetOne By Objects and Params
            


        

        /// <summary>
        /// 
        /// </summary>
        public MensajesList GetByComprasDetalle(DbTransaction transaction, System.Int32 IdCompraDetalle)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Mensajes_GetByComprasDetalle", IdCompraDetalle);
        }

        /// <summary>
        /// 
        /// </summary>
        public MensajesList GetByComprasDetalle(DbTransaction transaction, IUniqueIdentifiable ComprasDetalle)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Mensajes_GetByComprasDetalle", ComprasDetalle.Identifier());
        }

    


        

        /// <summary>
        /// 
        /// </summary>
        public MensajesList GetByComprasDetalle(System.Int32 IdCompraDetalle)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Mensajes_GetByComprasDetalle", IdCompraDetalle);
        }

        /// <summary>
        /// 
        /// </summary>
        public MensajesList GetByComprasDetalle(IUniqueIdentifiable ComprasDetalle)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Mensajes_GetByComprasDetalle", ComprasDetalle.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public void Delete(System.Int32 IdMensaje)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Mensajes_Delete", IdMensaje);
        }

        /// <summary>
        /// 
        /// </summary>
        public void Delete(DbTransaction transaction, System.Int32 IdMensaje)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Mensajes_Delete", IdMensaje);
        }


        // Delete By Objects and Params
            



        

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByComprasDetalle(System.Int32 IdCompraDetalle)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Mensajes_DeleteByComprasDetalle", IdCompraDetalle);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByComprasDetalle(DbTransaction transaction, System.Int32 IdCompraDetalle)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Mensajes_DeleteByComprasDetalle", IdCompraDetalle);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByComprasDetalle(IUniqueIdentifiable ComprasDetalle)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Mensajes_DeleteByComprasDetalle", ComprasDetalle.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByComprasDetalle(DbTransaction transaction, IUniqueIdentifiable ComprasDetalle)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Mensajes_DeleteByComprasDetalle", ComprasDetalle.Identifier());
        }


    


        //Database Queries 
        


        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion


    }


}

namespace monaguaRules.Wrappers
{
    /// <summary>
    /// 
    /// </summary>
    public class MensajesMapperWrapper
    {

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            return Instance().GetPKPropertiesNames();
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return Instance().GetMappingType();
        }



        /// <summary>
        /// 
        /// </summary>
        public monaguaRules.Mappers.MensajesMapper Instance()
        {
            return monaguaRules.Mappers.MensajesMapper.Instance(); 
        }
        
        /// <summary>
        /// Get a MensajesEntity by calling a Stored Procedure
        /// </summary>
        public Entities.Mensajes GetOne(System.Int32 IdMensaje) {
            return Instance().GetOne( IdMensaje);
        }

        // GetBy Objects and Params
            

        

        /// <summary>
        /// Get a MensajesList by calling a Stored Procedure
        /// </summary>
        public Entities.MensajesList GetByComprasDetalle(System.Int32 IdCompraDetalle)
        {
            return Instance().GetByComprasDetalle(IdCompraDetalle);
        }

        /// <summary>
        /// Get a MensajesList by calling a Stored Procedure
        /// </summary>
        public Entities.MensajesList GetByComprasDetalle(IUniqueIdentifiable ComprasDetalle)
        {
            return Instance().GetByComprasDetalle(ComprasDetalle);
        }

    

       

        /// <summary>
        /// Delete children for Mensajes
        /// </summary>
        public void DeleteChildren(DbTransaction transaction, Mensajes entity)
        {
            Instance().DeleteChildren(transaction, entity);
        }

        

            

        

        /// <summary>
        /// Delete Mensajes by ComprasDetalle
        /// </summary>
        public void DeleteByComprasDetalle(System.Int32 IdCompraDetalle)
        {
            Instance().DeleteByComprasDetalle(IdCompraDetalle);
        }

        /// <summary>
        /// Delete Mensajes by ComprasDetalle
        /// </summary>
        public void DeleteByComprasDetalle(IUniqueIdentifiable ComprasDetalle)
        {
            Instance().DeleteByComprasDetalle(ComprasDetalle);
        }

    
        /// <summary>
        /// Delete Mensajes 
        /// </summary>
        public void Delete(System.Int32 IdMensaje){
            Instance().Delete(IdMensaje);
        }

        /// <summary>
        /// Delete Mensajes 
        /// </summary>
        public void Delete(Entities.Mensajes entity ){
            Instance().Delete(entity);
        }

        /// <summary>
        /// Save Mensajes  
        /// </summary>
        public void Save(Entities.Mensajes entity){
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert Mensajes 
        /// </summary>
        public void Insert(Entities.Mensajes entity){
            Instance().Insert(entity);
        }

        /// <summary>
        /// GetAll Mensajes 
        /// </summary>
        public Entities.MensajesList GetAll(){  
            return Instance().GetAll();
        }

        /// <summary>
        /// Save Mensajes 
        /// </summary>
        public void Save(System.Int32 IdMensaje, System.DateTime Fecha, System.String Mensaje, System.Boolean LeidoPrestador, System.Boolean LeidoCliente, System.Boolean OrigenCliente, System.Boolean Activo, System.Int32 IdCompraDetalle){
            Entities.Mensajes entity = Instance().GetOne(IdMensaje);
            if (entity == null)
                throw new ApplicationException(String.Format("Entity not found. IUniqueIdentifiable Values: {0} = {1}", "IdMensaje", IdMensaje));

            entity.Fecha = Fecha;
            entity.Mensaje = Mensaje;
            entity.LeidoPrestador = LeidoPrestador;
            entity.LeidoCliente = LeidoCliente;
            entity.OrigenCliente = OrigenCliente;
            entity.Activo = Activo;
            entity.IdCompraDetalle = IdCompraDetalle;
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert Mensajes
        /// </summary>
        public void Insert(System.DateTime Fecha, System.String Mensaje, System.Boolean LeidoPrestador, System.Boolean LeidoCliente, System.Boolean OrigenCliente, System.Boolean Activo, System.Int32 IdCompraDetalle){
            Entities.Mensajes entity = new Entities.Mensajes();

            entity.Fecha = Fecha;
            entity.Mensaje = Mensaje;
            entity.LeidoPrestador = LeidoPrestador;
            entity.LeidoCliente = LeidoCliente;
            entity.OrigenCliente = OrigenCliente;
            entity.Activo = Activo;
            entity.IdCompraDetalle = IdCompraDetalle;
            Instance().Insert(entity);
        }


        //Database Queries 
        


    }
}





namespace monaguaRules.Loaders
{

    /// <summary>
    /// 
    /// </summary>
    public partial class MensajesLoader<T> : BaseLoader< T, Mensajes, ObjectList<T>>, IGenericGateway where T : Mensajes, new()
    {

        #region "Singleton"

        static MensajesLoader<T> _instance;

        private MensajesLoader()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static MensajesLoader<T> Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new MensajesLoader<T>();
                else {
                    MensajesLoader<T> inst = HttpContext.Current.Items["monaguaRules.MensajesLoaderSingleton"] as MensajesLoader<T>;
                    if (inst == null) {
                        inst = new MensajesLoader<T>();
                        HttpContext.Current.Items.Add("monaguaRules.MensajesLoaderSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"IdMensaje"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(Mensajes);
        }


        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "Mensajes"; }
        }

        
        
        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, Mensajes entity)
        {
            
            IMappeableMensajesObject Mensajes = (IMappeableMensajesObject)entity;
            Mensajes.HydrateFields(
            reader.GetInt32(0),
reader.GetDateTime(1),
reader.GetString(2),
reader.GetBoolean(3),
reader.GetBoolean(4),
reader.GetBoolean(5),
reader.GetBoolean(6),
reader.GetInt32(7));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "coop_";
        }


        
    

        

        /// <summary>
        /// Complete the aggregations for this entity. 
        /// </summary>
        protected override void CompleteEntity(T entity)
        {
            Entities.ComprasDetalle ComprasDetalleEntity = null; // Lazy load
            ((IMappeableMensajes)entity).CompleteEntity(ComprasDetalleEntity);
        }


        



        /// <summary>
        /// Get a Mensajes by execute a SQL Query Text
        /// </summary>
        public T GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a MensajesList by execute a SQL Query Text
        /// </summary>
        public ObjectList<T> GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }

        /// <summary>
        /// GetOne By Params
        /// </summary>
        public T GetOne(System.Int32 IdMensaje)
        {
            return base.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "Mensajes_GetOne", IdMensaje);
        }


        // GetOne By Objects and Params
            


        

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByComprasDetalle(DbTransaction transaction, System.Int32 IdCompraDetalle)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Mensajes_GetByComprasDetalle", IdCompraDetalle);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByComprasDetalle(DbTransaction transaction, IUniqueIdentifiable ComprasDetalle)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Mensajes_GetByComprasDetalle", ComprasDetalle.Identifier());
        }

    


        

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByComprasDetalle(System.Int32 IdCompraDetalle)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Mensajes_GetByComprasDetalle", IdCompraDetalle);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByComprasDetalle(IUniqueIdentifiable ComprasDetalle)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Mensajes_GetByComprasDetalle", ComprasDetalle.Identifier());
        }

    

        //Database Queries 
        



        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion

    }
}





