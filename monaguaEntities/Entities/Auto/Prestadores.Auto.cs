
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 20/5/2022 - 04:29 p.Â m.
// This is a partial class file. The other one is PrestadoresEntity.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using monaguaRules.Objects;



using Cooperator.Framework.Core;
using Cooperator.Framework.Core.LazyLoad;
using System;

namespace monaguaRules.Entities
{

    /// <summary>
    /// 
    /// </summary>
    public partial class Prestadores : Objects.PrestadoresObject, IMappeablePrestadores, IEquatable<Prestadores>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public Prestadores()
            :base()
        {
            if (_LocalidadesEntity == null) _LocalidadesEntity = new Entities.Localidades();
if (_PaisesEntity == null) _PaisesEntity = new Entities.Paises();
if (_ProvinciasEntity == null) _ProvinciasEntity = new Entities.Provincias();

        }

        /// <summary>
        /// 
        /// </summary>
        public Prestadores(
			System.Int32 IdPrestador)
            : base()
        {

			_IdPrestador = IdPrestador;

            if (_LocalidadesEntity == null) _LocalidadesEntity = new Entities.Localidades();
if (_PaisesEntity == null) _PaisesEntity = new Entities.Paises();
if (_ProvinciasEntity == null) _ProvinciasEntity = new Entities.Provincias();

            Initialized();
        }

        

        /// <summary>
        /// 
        /// </summary>
        public Prestadores(
			System.Int32 IdPrestador,
			System.String RazonSocial,
			System.String NombreFantasia,
			System.String Cuit,
			System.Int32 IdPais,
			System.Int32 IdProvincia,
			System.Int32 IdLocalidad,
			System.String Email,
			System.String Logo,
			System.DateTime FechaRegistro,
			System.Boolean PrestadorHabilitado,
			System.Boolean Politicas,
			System.Boolean Activo,
			System.String Telefono)
            : base()
        {

			_IdPrestador = IdPrestador;
			_RazonSocial = RazonSocial;
			_NombreFantasia = NombreFantasia;
			_Cuit = Cuit;
			_IdPais = IdPais;
			_IdProvincia = IdProvincia;
			_IdLocalidad = IdLocalidad;
			_Email = Email;
			_Logo = Logo;
			_FechaRegistro = FechaRegistro;
			_PrestadorHabilitado = PrestadorHabilitado;
			_Politicas = Politicas;
			_Activo = Activo;
			_Telefono = Telefono;

            if (_LocalidadesEntity == null) _LocalidadesEntity = new Entities.Localidades();
if (_PaisesEntity == null) _PaisesEntity = new Entities.Paises();
if (_ProvinciasEntity == null) _ProvinciasEntity = new Entities.Provincias();

            Initialized();
        }
        
        #endregion

        #region "Fields"

        /// <summary>
/// 
/// </summary>
protected Entities.Localidades _LocalidadesEntity;
/// <summary>
/// 
/// </summary>
protected Entities.Paises _PaisesEntity;
/// <summary>
/// 
/// </summary>
protected Entities.Provincias _ProvinciasEntity;

        #endregion

        #region "Properties"
        
bool _LocalidadesEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Entities.Localidades LocalidadesEntity
        {
            get
            {
                if (_LocalidadesEntity== null  && ! _LocalidadesEntityFetched ) {
_LocalidadesEntityFetched = true;
Entities.Localidades _LocalidadesEntityTemp = new Entities.Localidades(this.IdLocalidad); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Entities.Localidades));
 _LocalidadesEntity = lazyProvider.GetEntity(typeof(Entities.Localidades), _LocalidadesEntityTemp) as Entities.Localidades;
}

                return _LocalidadesEntity;
            }
            set
            {
                base.PropertyModified();
                _LocalidadesEntity = value;
                if (value != null) {
   _IdLocalidad = value.IdLocalidad;

} else {
   _IdLocalidad = System.Int32.MinValue;

}

            }
        }
        
bool _PaisesEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Entities.Paises PaisesEntity
        {
            get
            {
                if (_PaisesEntity== null  && ! _PaisesEntityFetched ) {
_PaisesEntityFetched = true;
Entities.Paises _PaisesEntityTemp = new Entities.Paises(this.IdPais); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Entities.Paises));
 _PaisesEntity = lazyProvider.GetEntity(typeof(Entities.Paises), _PaisesEntityTemp) as Entities.Paises;
}

                return _PaisesEntity;
            }
            set
            {
                base.PropertyModified();
                _PaisesEntity = value;
                if (value != null) {
   _IdPais = value.IdPais;

} else {
   _IdPais = System.Int32.MinValue;

}

            }
        }
        
bool _ProvinciasEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Entities.Provincias ProvinciasEntity
        {
            get
            {
                if (_ProvinciasEntity== null  && ! _ProvinciasEntityFetched ) {
_ProvinciasEntityFetched = true;
Entities.Provincias _ProvinciasEntityTemp = new Entities.Provincias(this.IdProvincia); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Entities.Provincias));
 _ProvinciasEntity = lazyProvider.GetEntity(typeof(Entities.Provincias), _ProvinciasEntityTemp) as Entities.Provincias;
}

                return _ProvinciasEntity;
            }
            set
            {
                base.PropertyModified();
                _ProvinciasEntity = value;
                if (value != null) {
   _IdProvincia = value.IdProvincia;

} else {
   _IdProvincia = System.Int32.MinValue;

}

            }
        }
        
        #endregion

        /// <summary>
        /// Returns de original value of entity since was created or restored.
        /// </summary>
        public new Prestadores OriginalValue()
        {
            return (Prestadores)base.OriginalValue();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            Prestadores newObject;            
            

            newObject = (Prestadores)this.MemberwiseClone();
            // Entities
                         
            if (this._LocalidadesEntity != null)
            {
                newObject._LocalidadesEntity = (Entities.Localidades)((ICloneable)this._LocalidadesEntity).Clone();
            }
                         
            if (this._PaisesEntity != null)
            {
                newObject._PaisesEntity = (Entities.Paises)((ICloneable)this._PaisesEntity).Clone();
            }
                         
            if (this._ProvinciasEntity != null)
            {
                newObject._ProvinciasEntity = (Entities.Provincias)((ICloneable)this._ProvinciasEntity).Clone();
            }
            
            // Colections
            
            // OriginalValue
            Prestadores newOriginalValue;
            if (base._OriginalValue != null)
            {
                newOriginalValue = (Prestadores)this.OriginalValue().MemberwiseClone();
                // Entities
                             
                if (this.OriginalValue()._LocalidadesEntity != null)
                {
                    newOriginalValue._LocalidadesEntity = (Entities.Localidades)((ICloneable)this.OriginalValue()._LocalidadesEntity).Clone();
                }
                             
                if (this.OriginalValue()._PaisesEntity != null)
                {
                    newOriginalValue._PaisesEntity = (Entities.Paises)((ICloneable)this.OriginalValue()._PaisesEntity).Clone();
                }
                             
                if (this.OriginalValue()._ProvinciasEntity != null)
                {
                    newOriginalValue._ProvinciasEntity = (Entities.Provincias)((ICloneable)this.OriginalValue()._ProvinciasEntity).Clone();
                }
                
                // Colections
                            
                newObject._OriginalValue = newOriginalValue;

            }
            return newObject;            
        }



        /// <summary>
        /// 
        /// </summary>
        void IMappeablePrestadores.CompleteEntity(Entities.Localidades LocalidadesEntity, Entities.Paises PaisesEntity, Entities.Provincias ProvinciasEntity)
        {
        _LocalidadesEntity = LocalidadesEntity;
_PaisesEntity = PaisesEntity;
_ProvinciasEntity = ProvinciasEntity;
        }
        
        bool IMappeablePrestadores.IsLocalidadesEntityNull()
        {
            return (_LocalidadesEntity == null);
        }
        
        bool IMappeablePrestadores.IsPaisesEntityNull()
        {
            return (_PaisesEntity == null);
        }
        
        bool IMappeablePrestadores.IsProvinciasEntityNull()
        {
            return (_ProvinciasEntity == null);
        }
        

        /// <summary>
        /// 
        /// </summary>
        void IMappeablePrestadores.SetFKValuesForChilds(Prestadores entity)
        {
                
        }

        /// <summary>
        /// 
        /// </summary>
        public bool Equals(Prestadores other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        } 

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeablePrestadores
    {
        /// <summary>
        /// 
        /// </summary>
        void CompleteEntity(Entities.Localidades LocalidadesEntity, Entities.Paises PaisesEntity, Entities.Provincias ProvinciasEntity);
        
        /// <summary>
        /// 
        /// </summary>
        bool IsLocalidadesEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        bool IsPaisesEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        bool IsProvinciasEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        void SetFKValuesForChilds(Prestadores entity);
    }

        /// <summary>
        /// 
        /// </summary>
    public partial class PrestadoresList : ObjectList<Prestadores>
    {
    }
}
namespace monaguaRules.Views
{
        /// <summary>
        /// 
        /// </summary>
    public partial class PrestadoresListView
        : ObjectListView<Entities.Prestadores>
    {
        /// <summary>
        /// 
        /// </summary>
        public PrestadoresListView(Entities.PrestadoresList list): base(list)
        {
        }
    }
}


