
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 31/08/2022 - 14:49
// This is a partial class file. The other one is FavoritosEntity.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using monaguaRules.Objects;



using Cooperator.Framework.Core;
using Cooperator.Framework.Core.LazyLoad;
using System;

namespace monaguaRules.Entities
{

    /// <summary>
    /// 
    /// </summary>
    public partial class Favoritos : Objects.FavoritosObject, IMappeableFavoritos, IEquatable<Favoritos>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public Favoritos()
            :base()
        {
            if (_ActividadesEntity == null) _ActividadesEntity = new Entities.Actividades();
if (_ClientesEntity == null) _ClientesEntity = new Entities.Clientes();

        }

        /// <summary>
        /// 
        /// </summary>
        public Favoritos(
			System.Int32 IdFavorito)
            : base()
        {

			_IdFavorito = IdFavorito;

            if (_ActividadesEntity == null) _ActividadesEntity = new Entities.Actividades();
if (_ClientesEntity == null) _ClientesEntity = new Entities.Clientes();

            Initialized();
        }

        

        /// <summary>
        /// 
        /// </summary>
        public Favoritos(
			System.Int32 IdFavorito,
			System.DateTime Fecha,
			System.Int32 IdCliente,
			System.Int32 IdActividad)
            : base()
        {

			_IdFavorito = IdFavorito;
			_Fecha = Fecha;
			_IdCliente = IdCliente;
			_IdActividad = IdActividad;

            if (_ActividadesEntity == null) _ActividadesEntity = new Entities.Actividades();
if (_ClientesEntity == null) _ClientesEntity = new Entities.Clientes();

            Initialized();
        }
        
        #endregion

        #region "Fields"

        /// <summary>
/// 
/// </summary>
protected Entities.Actividades _ActividadesEntity;
/// <summary>
/// 
/// </summary>
protected Entities.Clientes _ClientesEntity;

        #endregion

        #region "Properties"
        
bool _ActividadesEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Entities.Actividades ActividadesEntity
        {
            get
            {
                if (_ActividadesEntity== null  && ! _ActividadesEntityFetched ) {
_ActividadesEntityFetched = true;
Entities.Actividades _ActividadesEntityTemp = new Entities.Actividades(this.IdActividad); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Entities.Actividades));
 _ActividadesEntity = lazyProvider.GetEntity(typeof(Entities.Actividades), _ActividadesEntityTemp) as Entities.Actividades;
}

                return _ActividadesEntity;
            }
            set
            {
                base.PropertyModified();
                _ActividadesEntity = value;
                if (value != null) {
   _IdActividad = value.IdActividad;

} else {
   _IdActividad = System.Int32.MinValue;

}

            }
        }
        
bool _ClientesEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Entities.Clientes ClientesEntity
        {
            get
            {
                if (_ClientesEntity== null  && ! _ClientesEntityFetched ) {
_ClientesEntityFetched = true;
Entities.Clientes _ClientesEntityTemp = new Entities.Clientes(this.IdCliente); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Entities.Clientes));
 _ClientesEntity = lazyProvider.GetEntity(typeof(Entities.Clientes), _ClientesEntityTemp) as Entities.Clientes;
}

                return _ClientesEntity;
            }
            set
            {
                base.PropertyModified();
                _ClientesEntity = value;
                if (value != null) {
   _IdCliente = value.IdCliente;

} else {
   _IdCliente = System.Int32.MinValue;

}

            }
        }
        
        #endregion

        /// <summary>
        /// Returns de original value of entity since was created or restored.
        /// </summary>
        public new Favoritos OriginalValue()
        {
            return (Favoritos)base.OriginalValue();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            Favoritos newObject;            
            

            newObject = (Favoritos)this.MemberwiseClone();
            // Entities
                         
            if (this._ActividadesEntity != null)
            {
                newObject._ActividadesEntity = (Entities.Actividades)((ICloneable)this._ActividadesEntity).Clone();
            }
                         
            if (this._ClientesEntity != null)
            {
                newObject._ClientesEntity = (Entities.Clientes)((ICloneable)this._ClientesEntity).Clone();
            }
            
            // Colections
            
            // OriginalValue
            Favoritos newOriginalValue;
            if (base._OriginalValue != null)
            {
                newOriginalValue = (Favoritos)this.OriginalValue().MemberwiseClone();
                // Entities
                             
                if (this.OriginalValue()._ActividadesEntity != null)
                {
                    newOriginalValue._ActividadesEntity = (Entities.Actividades)((ICloneable)this.OriginalValue()._ActividadesEntity).Clone();
                }
                             
                if (this.OriginalValue()._ClientesEntity != null)
                {
                    newOriginalValue._ClientesEntity = (Entities.Clientes)((ICloneable)this.OriginalValue()._ClientesEntity).Clone();
                }
                
                // Colections
                            
                newObject._OriginalValue = newOriginalValue;

            }
            return newObject;            
        }



        /// <summary>
        /// 
        /// </summary>
        void IMappeableFavoritos.CompleteEntity(Entities.Actividades ActividadesEntity, Entities.Clientes ClientesEntity)
        {
        _ActividadesEntity = ActividadesEntity;
_ClientesEntity = ClientesEntity;
        }
        
        bool IMappeableFavoritos.IsActividadesEntityNull()
        {
            return (_ActividadesEntity == null);
        }
        
        bool IMappeableFavoritos.IsClientesEntityNull()
        {
            return (_ClientesEntity == null);
        }
        

        /// <summary>
        /// 
        /// </summary>
        void IMappeableFavoritos.SetFKValuesForChilds(Favoritos entity)
        {
                
        }

        /// <summary>
        /// 
        /// </summary>
        public bool Equals(Favoritos other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        } 

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableFavoritos
    {
        /// <summary>
        /// 
        /// </summary>
        void CompleteEntity(Entities.Actividades ActividadesEntity, Entities.Clientes ClientesEntity);
        
        /// <summary>
        /// 
        /// </summary>
        bool IsActividadesEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        bool IsClientesEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        void SetFKValuesForChilds(Favoritos entity);
    }

        /// <summary>
        /// 
        /// </summary>
    public partial class FavoritosList : ObjectList<Favoritos>
    {
    }
}
namespace monaguaRules.Views
{
        /// <summary>
        /// 
        /// </summary>
    public partial class FavoritosListView
        : ObjectListView<Entities.Favoritos>
    {
        /// <summary>
        /// 
        /// </summary>
        public FavoritosListView(Entities.FavoritosList list): base(list)
        {
        }
    }
}


