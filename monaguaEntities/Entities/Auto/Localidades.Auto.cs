
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 6/7/2022 - 04:37 p.Â m.
// This is a partial class file. The other one is LocalidadesEntity.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using monaguaRules.Objects;



using Cooperator.Framework.Core;
using Cooperator.Framework.Core.LazyLoad;
using System;

namespace monaguaRules.Entities
{

    /// <summary>
    /// 
    /// </summary>
    public partial class Localidades : Objects.LocalidadesObject, IMappeableLocalidades, IEquatable<Localidades>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public Localidades()
            :base()
        {
            if (_ProvinciasEntity == null) _ProvinciasEntity = new Entities.Provincias();

        }

        /// <summary>
        /// 
        /// </summary>
        public Localidades(
			System.Int32 IdLocalidad)
            : base()
        {

			_IdLocalidad = IdLocalidad;

            if (_ProvinciasEntity == null) _ProvinciasEntity = new Entities.Provincias();

            Initialized();
        }

        

        /// <summary>
        /// 
        /// </summary>
        public Localidades(
			System.Int32 IdLocalidad,
			System.String Nombre,
			System.String Cp,
			System.Int32 IdProvincia)
            : base()
        {

			_IdLocalidad = IdLocalidad;
			_Nombre = Nombre;
			_Cp = Cp;
			_IdProvincia = IdProvincia;

            if (_ProvinciasEntity == null) _ProvinciasEntity = new Entities.Provincias();

            Initialized();
        }
        
        #endregion

        #region "Fields"

        /// <summary>
/// 
/// </summary>
protected Entities.Provincias _ProvinciasEntity;

        #endregion

        #region "Properties"
        
bool _ProvinciasEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Entities.Provincias ProvinciasEntity
        {
            get
            {
                if (_ProvinciasEntity== null  && ! _ProvinciasEntityFetched ) {
_ProvinciasEntityFetched = true;
Entities.Provincias _ProvinciasEntityTemp = new Entities.Provincias(this.IdProvincia); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Entities.Provincias));
 _ProvinciasEntity = lazyProvider.GetEntity(typeof(Entities.Provincias), _ProvinciasEntityTemp) as Entities.Provincias;
}

                return _ProvinciasEntity;
            }
            set
            {
                base.PropertyModified();
                _ProvinciasEntity = value;
                if (value != null) {
   _IdProvincia = value.IdProvincia;

} else {
   _IdProvincia = System.Int32.MinValue;

}

            }
        }
        
        #endregion

        /// <summary>
        /// Returns de original value of entity since was created or restored.
        /// </summary>
        public new Localidades OriginalValue()
        {
            return (Localidades)base.OriginalValue();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            Localidades newObject;            
            

            newObject = (Localidades)this.MemberwiseClone();
            // Entities
                         
            if (this._ProvinciasEntity != null)
            {
                newObject._ProvinciasEntity = (Entities.Provincias)((ICloneable)this._ProvinciasEntity).Clone();
            }
            
            // Colections
            
            // OriginalValue
            Localidades newOriginalValue;
            if (base._OriginalValue != null)
            {
                newOriginalValue = (Localidades)this.OriginalValue().MemberwiseClone();
                // Entities
                             
                if (this.OriginalValue()._ProvinciasEntity != null)
                {
                    newOriginalValue._ProvinciasEntity = (Entities.Provincias)((ICloneable)this.OriginalValue()._ProvinciasEntity).Clone();
                }
                
                // Colections
                            
                newObject._OriginalValue = newOriginalValue;

            }
            return newObject;            
        }



        /// <summary>
        /// 
        /// </summary>
        void IMappeableLocalidades.CompleteEntity(Entities.Provincias ProvinciasEntity)
        {
        _ProvinciasEntity = ProvinciasEntity;
        }
        
        bool IMappeableLocalidades.IsProvinciasEntityNull()
        {
            return (_ProvinciasEntity == null);
        }
        

        /// <summary>
        /// 
        /// </summary>
        void IMappeableLocalidades.SetFKValuesForChilds(Localidades entity)
        {
                
        }

        /// <summary>
        /// 
        /// </summary>
        public bool Equals(Localidades other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        } 

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableLocalidades
    {
        /// <summary>
        /// 
        /// </summary>
        void CompleteEntity(Entities.Provincias ProvinciasEntity);
        
        /// <summary>
        /// 
        /// </summary>
        bool IsProvinciasEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        void SetFKValuesForChilds(Localidades entity);
    }

        /// <summary>
        /// 
        /// </summary>
    public partial class LocalidadesList : ObjectList<Localidades>
    {
    }
}
namespace monaguaRules.Views
{
        /// <summary>
        /// 
        /// </summary>
    public partial class LocalidadesListView
        : ObjectListView<Entities.Localidades>
    {
        /// <summary>
        /// 
        /// </summary>
        public LocalidadesListView(Entities.LocalidadesList list): base(list)
        {
        }
    }
}


